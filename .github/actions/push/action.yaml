---
name: Docker build and push

inputs:
  github-token:
    required: true
  image_tag:
    required: false
    type: string
  dockerfile:
    required: false
    type: string
    default: "Dockerfile"
  build-args:
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/s
        github-token: ${{ inputs.github-token }}

    - name: Image tag
      run: |
        REPOSITORY_NAME="$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
        if [ -z ${{ inputs.image_tag }} ]; then
            BUILD_TIMESTAMP="$(date +%s)"
            SHORT_SHA="$(git rev-parse --short HEAD)"
            echo GHCR_TAG="ghcr.io/${{ github.repository }}/${{ env.REPOSITORY_NAME }}:develop-${{ env.BUILD_TIMESTAMP }}-git.${{ env.SHORT_SHA }}" >> $GITHUB_ENV
        else
            echo GHCR_TAG="ghcr.io/${{ github.repository }}/${{ env.REPOSITORY_NAME }}:${{ inputs.image_tag }}" >> $GITHUB_ENV
        fi

    - name: Restore Go mod (pkg)
      uses: actions/cache/restore@v3
      with:
        path: "~/go/pkg/mod"
        key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}-${{ github.sha }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}-${{ github.sha }}-
          ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-gomod-

    - name: Restore Go build (test)
      uses: actions/cache/restore@v3
      with:
        path: "~/.cache/go-build"
        key: ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}-${{ github.sha }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}-${{ github.sha }}-
          ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}-
          ${{ runner.os }}-gobuild-

    - name: Set up Docker Context for buildx
      id: buildx-context
      run: |
        docker context create builders

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        endpoint: builders

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: ${{ inputs.dockerfile }}
        push: true
        build-args: ${{ inputs.build-args }}
        tags: ${{ env.GHCR_TAG }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/${{ env.REPOSITORY_NAME }}:cache
        cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/${{ env.REPOSITORY_NAME }}:cache,mode=max
        provenance: false
